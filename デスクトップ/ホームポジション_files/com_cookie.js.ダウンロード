function uTF8Encode(string) {
	string = string.replace(/\x0d\x0a/g, "\x0a");
	var output = "";
	for (var n = 0; n < string.length; n++) {
		var c = string.charCodeAt(n);
		if (c < 128) {
			output += String.fromCharCode(c);
		} else if ((c > 127) && (c < 2048)) {
			output += String.fromCharCode((c >> 6) | 192);
			output += String.fromCharCode((c & 63) | 128);
		} else {
			output += String.fromCharCode((c >> 12) | 224);
			output += String.fromCharCode(((c >> 6) & 63) | 128);
			output += String.fromCharCode((c & 63) | 128);
		}
	}
	return output;
}

function uTF8Decode(input) {
	var string = "";
	var i = 0;
	var c = c1 = c2 = 0;
	while ( i < input.length ) {
		c = input.charCodeAt(i);
		if (c < 128) {
			string += String.fromCharCode(c);
			i++;
		} else if ((c > 191) && (c < 224)) {
			c2 = input.charCodeAt(i+1);
			string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
			i += 2;
		} else {
			c2 = input.charCodeAt(i+1);
			c3 = input.charCodeAt(i+2);
			string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6)
					| (c3 & 63));
			i += 3;
		}
	}
	return string;
}

function base64Encode(input) {
	var keyString = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var output = "";
	var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
	var i = 0;
	input = uTF8Encode(input);
	while (i < input.length) {
		chr1 = input.charCodeAt(i++);
		chr2 = input.charCodeAt(i++);
		chr3 = input.charCodeAt(i++);
		enc1 = chr1 >> 2;
		enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
		enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
		enc4 = chr3 & 63;
		if (isNaN(chr2)) {
			enc3 = enc4 = 64;
		} else if (isNaN(chr3)) {
			enc4 = 64;
		}
		output = output + keyString.charAt(enc1) + keyString.charAt(enc2)
				+ keyString.charAt(enc3) + keyString.charAt(enc4);
	}
	return output;
}

function base64Decode(input) {
	var keyString = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var output = "";
	var chr1, chr2, chr3;
	var enc1, enc2, enc3, enc4;
	var i = 0;
	input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
	while (i < input.length) {
		enc1 = keyString.indexOf(input.charAt(i++));
		enc2 = keyString.indexOf(input.charAt(i++));
		enc3 = keyString.indexOf(input.charAt(i++));
		enc4 = keyString.indexOf(input.charAt(i++));
		chr1 = (enc1 << 2) | (enc2 >> 4);
		chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
		chr3 = ((enc3 & 3) << 6) | enc4;
		output = output + String.fromCharCode(chr1);
		if (enc3 != 64) {
			output = output + String.fromCharCode(chr2);
		}
		if (enc4 != 64) {
			output = output + String.fromCharCode(chr3);
		}
	}
	output = uTF8Decode(output);
	return output;
}

function trim_manabiCom( text ) {
	return (text || "").replace(/^(\s|\u00A0)+|(\s|\u00A0)+$/g, "");
}

function execCookieProcess(name, value, options) {
    if (typeof value != 'undefined') {
        options = options || {};
        if (value === null) {
            value = '';
            options.expires = -1;
        }
        var expires = '';
		if (options.expires
				&& (typeof options.expires == 'number' || options.expires.toUTCString)) {
            var date;
            if (typeof options.expires == 'number') {
                date = new Date();
				date.setTime(date.getTime()
						+ (options.expires * 24 * 60 * 60 * 1000));
            } else {
                date = options.expires;
            }
            expires = '; expires=' + date.toUTCString();
        }
        var path = options.path ? '; path=' + (options.path) : '';
        var domain = options.domain ? '; domain=' + (options.domain) : '';
        var secure = options.secure ? '; secure' : '';
		document.cookie = [ name, '=',
				encodeURIComponent(base64Encode(base64Encode(value))), expires,
				path, domain, secure ].join('');
    } else {
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = trim_manabiCom(cookies[i]);
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
					cookieValue = base64Decode(base64Decode(decodeURIComponent(cookie
							.substring(name.length + 1))));
                    break;
                }
            }
        }
        return cookieValue;
    }
}

// 汎用Cookie読み込み
function getCookie_manabiCom(cookieName, key){
	var cookieVal = execCookieProcess(cookieName);
	var cookieValue = null;
    if (cookieVal && cookieVal != '') {
        var cookies = cookieVal.split('\t');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = cookies[i];
            if (cookie.substring(0, key.length + 1) == (key + '=')) {
                cookieValue = cookie.substring(key.length + 1);
                break;
            }
        }
    }
    return cookieValue;
}

// 汎用Cookie書き込み・削除
function setCookie_manabiCom(cookieName, key, val, saveFlg){
	var expiresDays = -1;

	if (val){ //書き込む値が存在する場合、予約語のタブ（\t）を空白へ置換
		val = val.replace(/\t/g," ");
	}
	
	// *** Cookieが増えたらここを拡張 ***
	switch(cookieName){
		case 'manabi-Common_6M':
			expiresDays = 180;
			break;
	case 'manabi-Common_Session':
		expiresDays = '';
		break;
		default:
			return false;
			break;
	}
	
	var cookieVal = execCookieProcess(cookieName);

	if(cookieVal == null){
		if(saveFlg){
			cookieVal = key + '=' + val;
		}else{
			return true;
		}
	}else{
		var reg = new RegExp('(^|\t)(' + key + '=.*?)(\t|$)');
		if(reg.test(cookieVal)){
			if(saveFlg){
				if (RegExp.$1 == '\t') {
					cookieVal = cookieVal.replace(RegExp.$1 + RegExp.$2,
							RegExp.$1 + key + '=' + val);
				} else {
				cookieVal = cookieVal.replace(RegExp.$2, key + '=' + val);
				}
			}else{
				if(RegExp.$1 == '\t'){
					cookieVal = cookieVal.replace(RegExp.$1 + RegExp.$2, '');
				}else{
					cookieVal = cookieVal.replace(RegExp.$2 + RegExp.$3, '');
				}
				if(cookieVal.length <= 0){
					execCookieProcess(cookieName, null, {
						path : '/',
						domain : '.benesse.ne.jp',
						secure : false
					});
					return true;
				}
			}
		}else if(saveFlg){
			cookieVal += '\t' + key + '=' + val;
		}else{
			return true;
		}
	}
	
	execCookieProcess(cookieName, cookieVal, {
		expires : expiresDays,
		path : '/',
		domain : '.benesse.ne.jp',
		secure : false
	});
	
	return true;
}
// 新講座会員用
function isKzemi() {
	var line = getCookie_manabiCom("manabi-Common_Session", "line");

	if (line != null && line != "" && line >= 1995) {
		return true;
	}
	return false;
}
